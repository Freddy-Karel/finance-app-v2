"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_action-browser_src_server_actions_anomalies_ts";
exports.ids = ["_action-browser_src_server_actions_anomalies_ts"];
exports.modules = {

/***/ "(action-browser)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentRole: () => (/* binding */ getCurrentRole),\n/* harmony export */   requireRole: () => (/* binding */ requireRole)\n/* harmony export */ });\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(action-browser)/./node_modules/.pnpm/@clerk+nextjs@5.3.1_next@15_20ea36d09dc70bbbcc56b8a0d9ae486b/node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n\nasync function getCurrentRole() {\n    if (process.env.E2E_ROLE === \"operator\" || process.env.E2E_ROLE === \"manager\" || process.env.E2E_ROLE === \"auditor\") return process.env.E2E_ROLE;\n    const { userId, sessionClaims } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__.auth)();\n    if (!userId) throw new Error(\"Unauthenticated\");\n    return sessionClaims?.role ?? \"operator\";\n}\nasync function requireRole(allowed) {\n    const role = await getCurrentRole();\n    if (!allowed.includes(role)) throw new Error(\"Forbidden\");\n    return role;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFFckMsZUFBZUM7SUFDcEIsSUFBSUMsUUFBUUMsR0FBRyxDQUFDQyxRQUFRLEtBQUssY0FBY0YsUUFBUUMsR0FBRyxDQUFDQyxRQUFRLEtBQUssYUFBYUYsUUFBUUMsR0FBRyxDQUFDQyxRQUFRLEtBQUssV0FBVyxPQUFPRixRQUFRQyxHQUFHLENBQUNDLFFBQVE7SUFDaEosTUFBTSxFQUFFQyxNQUFNLEVBQUVDLGFBQWEsRUFBRSxHQUFHTiwwREFBSUE7SUFBSSxJQUFJLENBQUNLLFFBQVEsTUFBTSxJQUFJRSxNQUFNO0lBQ3ZFLE9BQU8sZUFBZ0JDLFFBQTZCO0FBQ3REO0FBQ08sZUFBZUMsWUFBWUMsT0FBZTtJQUFJLE1BQU1GLE9BQU8sTUFBTVA7SUFBa0IsSUFBSSxDQUFDUyxRQUFRQyxRQUFRLENBQUNILE9BQU8sTUFBTSxJQUFJRCxNQUFNO0lBQWMsT0FBT0M7QUFBTSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxCQzI0MVxcTXVzaWNcXGZpbmFuY2UtYXBwLXYxLW1haW5cXGZpbmFuY2UtYXBwLXYxLW1haW5cXHNyY1xcbGliXFxhdXRoLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF1dGggfSBmcm9tIFwiQGNsZXJrL25leHRqcy9zZXJ2ZXJcIjtcbmV4cG9ydCB0eXBlIFJvbGUgPSBcIm9wZXJhdG9yXCIgfCBcIm1hbmFnZXJcIiB8IFwiYXVkaXRvclwiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEN1cnJlbnRSb2xlKCk6IFByb21pc2U8Um9sZT4ge1xuICBpZiAocHJvY2Vzcy5lbnYuRTJFX1JPTEUgPT09IFwib3BlcmF0b3JcIiB8fCBwcm9jZXNzLmVudi5FMkVfUk9MRSA9PT0gXCJtYW5hZ2VyXCIgfHwgcHJvY2Vzcy5lbnYuRTJFX1JPTEUgPT09IFwiYXVkaXRvclwiKSByZXR1cm4gcHJvY2Vzcy5lbnYuRTJFX1JPTEUgYXMgUm9sZTtcbiAgY29uc3QgeyB1c2VySWQsIHNlc3Npb25DbGFpbXMgfSA9IGF1dGgoKTsgaWYgKCF1c2VySWQpIHRocm93IG5ldyBFcnJvcihcIlVuYXV0aGVudGljYXRlZFwiKTtcbiAgcmV0dXJuIChzZXNzaW9uQ2xhaW1zPy5yb2xlIGFzIFJvbGUgfCB1bmRlZmluZWQpID8/IFwib3BlcmF0b3JcIjtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZXF1aXJlUm9sZShhbGxvd2VkOiBSb2xlW10pIHsgY29uc3Qgcm9sZSA9IGF3YWl0IGdldEN1cnJlbnRSb2xlKCk7IGlmICghYWxsb3dlZC5pbmNsdWRlcyhyb2xlKSkgdGhyb3cgbmV3IEVycm9yKFwiRm9yYmlkZGVuXCIpOyByZXR1cm4gcm9sZTsgfVxuIl0sIm5hbWVzIjpbImF1dGgiLCJnZXRDdXJyZW50Um9sZSIsInByb2Nlc3MiLCJlbnYiLCJFMkVfUk9MRSIsInVzZXJJZCIsInNlc3Npb25DbGFpbXMiLCJFcnJvciIsInJvbGUiLCJyZXF1aXJlUm9sZSIsImFsbG93ZWQiLCJpbmNsdWRlcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(action-browser)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.__prisma ??= new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) global.__prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQVN2QyxNQUFNQyxTQUFVQyxPQUFPQyxRQUFRLEtBQUssSUFBSUgsd0RBQVlBLEdBQUk7QUFDL0QsSUFBSUksSUFBcUMsRUFBRUYsT0FBT0MsUUFBUSxHQUFHRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxCQzI0MVxcTXVzaWNcXGZpbmFuY2UtYXBwLXYxLW1haW5cXGZpbmFuY2UtYXBwLXYxLW1haW5cXHNyY1xcbGliXFxwcmlzbWEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xuXG4vLyBFbnN1cmUgYSBzaW5nbGUgUHJpc21hQ2xpZW50IGluc3RhbmNlIGluIGRldmVsb3BtZW50IHRvIGF2b2lkIGV4aGF1c3Rpbmdcbi8vIGRhdGFiYXNlIGNvbm5lY3Rpb25zIGR1cmluZyBITVIgKHNlZSBQcmlzbWEgZG9jcykuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby12YXJcbiAgdmFyIF9fcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPSAoZ2xvYmFsLl9fcHJpc21hID8/PSBuZXcgUHJpc21hQ2xpZW50KCkpO1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbC5fX3ByaXNtYSA9IHByaXNtYTtcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJnbG9iYWwiLCJfX3ByaXNtYSIsInByb2Nlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(action-browser)/./src/server/actions/anomalies.ts":
/*!*****************************************!*\
  !*** ./src/server/actions/anomalies.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportAnomaliesCSV: () => (/* binding */ exportAnomaliesCSV),\n/* harmony export */   getAnomaliesCount: () => (/* binding */ getAnomaliesCount),\n/* harmony export */   listAnomalies: () => (/* binding */ listAnomalies),\n/* harmony export */   resolveAnomaly: () => (/* binding */ resolveAnomaly)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/.pnpm/next@15.0.3_@playwright+tes_c0fbebec67a33fb30e42c14d3a81a9d2/node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/.pnpm/next@15.0.3_@playwright+tes_c0fbebec67a33fb30e42c14d3a81a9d2/node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prisma */ \"(action-browser)/./src/lib/prisma.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/auth */ \"(action-browser)/./src/lib/auth.ts\");\n/* harmony import */ var _server_validators_anomalies__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/server/validators/anomalies */ \"(action-browser)/./src/server/validators/anomalies.ts\");\n/* harmony import */ var _server_queries_reports__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/server/queries/reports */ \"(action-browser)/./src/server/queries/reports.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/.pnpm/next@15.0.3_@playwright+tes_c0fbebec67a33fb30e42c14d3a81a9d2/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"40120e97063388b7f8ced5848b1033c15ff328dfb6\":\"exportAnomaliesCSV\",\"408df2fd3930aaeaefdfbabfe73b56d9234d2eb25d\":\"listAnomalies\",\"40c79e409d8b49b98a6564d1c27d2685303c6e52bf\":\"resolveAnomaly\",\"40cfc506c78729c26b24a501c8b9ef8608b39db925\":\"getAnomaliesCount\"} */ \n\n\n\n\n\nfunction range(start, end) {\n    if (!start || !end) return undefined;\n    return {\n        gte: new Date(start + \"T00:00:00.000Z\"),\n        lte: new Date(end + \"T23:59:59.999Z\")\n    };\n}\nasync function listAnomalies(input) {\n    await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_3__.requireRole)([\n        \"operator\",\n        \"manager\",\n        \"auditor\"\n    ]);\n    const p = _server_validators_anomalies__WEBPACK_IMPORTED_MODULE_4__.ListAnomaliesSchema.safeParse(input);\n    if (!p.success) throw new Error(p.error.errors.map((e)=>e.message).join(\"; \"));\n    const { start, end, level, code, status, limit, offset } = p.data;\n    const where = {};\n    const r = range(start, end);\n    if (r) where.createdAt = r;\n    if (level?.length) where.level = {\n        in: level\n    };\n    if (code) where.code = {\n        contains: code,\n        mode: \"insensitive\"\n    };\n    if (status === \"open\") where.resolvedAt = null;\n    if (status === \"resolved\") where.resolvedAt = {\n        not: null\n    };\n    const rows = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.anomaly.findMany({\n        where,\n        include: {\n            tx: {\n                select: {\n                    id: true,\n                    kind: true,\n                    label: true,\n                    at: true\n                }\n            }\n        },\n        orderBy: [\n            {\n                resolvedAt: \"asc\"\n            },\n            {\n                createdAt: \"desc\"\n            }\n        ],\n        take: limit,\n        skip: offset\n    });\n    const total = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.anomaly.count({\n        where\n    });\n    const items = rows.map((a)=>({\n            id: a.id,\n            createdAt: a.createdAt,\n            resolvedAt: a.resolvedAt ?? null,\n            level: a.level,\n            code: a.code,\n            details: a.details,\n            transactionId: a.transactionId ?? null,\n            txKind: a.tx?.kind ?? null,\n            txLabel: a.tx?.label ?? null,\n            txAt: a.tx?.at ?? null,\n            status: a.resolvedAt ? \"resolved\" : \"open\"\n        }));\n    return {\n        total,\n        items\n    };\n}\nasync function getAnomaliesCount(input) {\n    await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_3__.requireRole)([\n        \"operator\",\n        \"manager\",\n        \"auditor\"\n    ]);\n    const where = {};\n    if (input?.status === 'open') where.resolvedAt = null;\n    if (input?.status === 'resolved') where.resolvedAt = {\n        not: null\n    };\n    const total = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.anomaly.count({\n        where\n    });\n    return {\n        total\n    };\n}\nasync function resolveAnomaly(input) {\n    await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_3__.requireRole)([\n        \"manager\"\n    ]);\n    const p = _server_validators_anomalies__WEBPACK_IMPORTED_MODULE_4__.ResolveAnomalySchema.safeParse(input);\n    if (!p.success) throw new Error(p.error.errors.map((e)=>e.message).join(\"; \"));\n    const updated = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.anomaly.update({\n        where: {\n            id: p.data.id\n        },\n        data: {\n            resolvedAt: new Date()\n        }\n    });\n    // If a note was provided, persist it in the AuditLog for traceability\n    if (p.data.note) {\n        await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.auditLog.create({\n            data: {\n                action: \"anomaly.resolve\",\n                metaJson: JSON.stringify({\n                    anomalyId: p.data.id,\n                    note: p.data.note\n                })\n            }\n        });\n    }\n    return {\n        id: updated.id,\n        resolvedAt: updated.resolvedAt\n    };\n}\nasync function exportAnomaliesCSV(input) {\n    const { items } = await listAnomalies({\n        ...input || {},\n        limit: 200,\n        offset: 0\n    });\n    const rows = items.map((i)=>({\n            id: i.id,\n            createdAt: i.createdAt.toISOString(),\n            resolvedAt: i.resolvedAt ? i.resolvedAt.toISOString() : \"\",\n            level: i.level,\n            code: i.code,\n            details: i.details,\n            status: i.status,\n            transactionId: i.transactionId ?? \"\",\n            txKind: i.txKind ?? \"\",\n            txLabel: i.txLabel ?? \"\",\n            txAt: i.txAt ? i.txAt.toISOString() : \"\"\n        }));\n    return (0,_server_queries_reports__WEBPACK_IMPORTED_MODULE_5__.toCSV)(rows, [\n        \"id\",\n        \"createdAt\",\n        \"resolvedAt\",\n        \"level\",\n        \"code\",\n        \"details\",\n        \"status\",\n        \"transactionId\",\n        \"txKind\",\n        \"txLabel\",\n        \"txAt\"\n    ]);\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__.ensureServerEntryExports)([\n    listAnomalies,\n    getAnomaliesCount,\n    resolveAnomaly,\n    exportAnomaliesCSV\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(listAnomalies, \"408df2fd3930aaeaefdfbabfe73b56d9234d2eb25d\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(getAnomaliesCount, \"40cfc506c78729c26b24a501c8b9ef8608b39db925\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(resolveAnomaly, \"40c79e409d8b49b98a6564d1c27d2685303c6e52bf\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(exportAnomaliesCSV, \"40120e97063388b7f8ced5848b1033c15ff328dfb6\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./src/server/actions/anomalies.ts\n");

/***/ }),

/***/ "(action-browser)/./src/server/queries/reports.ts":
/*!***************************************!*\
  !*** ./src/server/queries/reports.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchEnvelopeExecution: () => (/* binding */ fetchEnvelopeExecution),\n/* harmony export */   fetchTransactionsReport: () => (/* binding */ fetchTransactionsReport),\n/* harmony export */   toCSV: () => (/* binding */ toCSV)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ \"(action-browser)/./src/lib/prisma.ts\");\n\nfunction parseRange(startStr, endStr) {\n    return {\n        start: new Date(startStr + \"T00:00:00.000Z\"),\n        end: new Date(endStr + \"T23:59:59.999Z\")\n    };\n}\nasync function fetchTransactionsReport(p) {\n    const { start, end } = parseRange(p.start, p.end);\n    const where = {\n        at: {\n            gte: start,\n            lte: end\n        }\n    };\n    if (p.type) where.kind = p.type;\n    if (p.serviceId) where.serviceId = p.serviceId;\n    const includeAlloc = !!p.envelopeId || where.kind === \"OUT\" || where.kind === \"DIST\" || !where.kind;\n    const txs = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.transaction.findMany({\n        where,\n        include: includeAlloc ? {\n            allocs: p.envelopeId ? {\n                where: {\n                    envelopeId: p.envelopeId\n                },\n                include: {\n                    envelope: true\n                }\n            } : {\n                include: {\n                    envelope: true\n                }\n            }\n        } : undefined,\n        orderBy: {\n            at: \"asc\"\n        },\n        take: p.limit,\n        skip: p.offset\n    });\n    return txs.map((t)=>{\n        const rawAllocs = t.allocs ?? [];\n        const allocations = rawAllocs.map((a)=>({\n                envelopeId: a.envelopeId,\n                envelopeName: a.envelope?.name ?? \"\",\n                amount: a.amount\n            }));\n        return {\n            id: t.id,\n            kind: t.kind,\n            label: t.label ?? null,\n            amount: t.amount,\n            at: t.at,\n            serviceId: t.serviceId ?? null,\n            allocations\n        };\n    });\n}\nasync function fetchEnvelopeExecution(p) {\n    const { start, end } = parseRange(p.start, p.end);\n    const inflows = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.transactionAllocation.groupBy({\n        by: [\n            \"envelopeId\"\n        ],\n        _sum: {\n            amount: true\n        },\n        where: {\n            transaction: {\n                kind: \"DIST\",\n                at: {\n                    gte: start,\n                    lte: end\n                }\n            }\n        }\n    });\n    const outflows = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.transactionAllocation.groupBy({\n        by: [\n            \"envelopeId\"\n        ],\n        _sum: {\n            amount: true\n        },\n        where: {\n            transaction: {\n                kind: \"OUT\",\n                at: {\n                    gte: start,\n                    lte: end\n                }\n            }\n        }\n    });\n    const envs = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.envelope.findMany({\n        select: {\n            id: true,\n            name: true,\n            protected: true,\n            active: true\n        }\n    });\n    const mapIn = new Map(inflows.map((i)=>[\n            i.envelopeId,\n            i._sum.amount ?? 0\n        ]));\n    const mapOut = new Map(outflows.map((o)=>[\n            o.envelopeId,\n            o._sum.amount ?? 0\n        ]));\n    return envs.map((e)=>{\n        const inflow = mapIn.get(e.id) ?? 0;\n        const outflow = mapOut.get(e.id) ?? 0;\n        return {\n            envelopeId: e.id,\n            name: e.name,\n            protected: e.protected,\n            active: e.active,\n            inflow,\n            outflow,\n            delta: inflow - outflow\n        };\n    }).sort((a, b)=>a.name.localeCompare(b.name));\n}\nfunction toCSV(rows, headers) {\n    if (!rows.length) return \"\";\n    const cols = headers ?? Object.keys(rows[0]);\n    const esc = (v)=>{\n        const s = String(v ?? \"\");\n        return /[\",\\n]/.test(s) ? `\"${s.replace(/\"/g, '\"\"')}\"` : s;\n    };\n    const out = [\n        cols.join(\",\")\n    ];\n    for (const r of rows)out.push(cols.map((c)=>esc(r[c])).join(\",\"));\n    return out.join(\"\\n\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./src/server/queries/reports.ts\n");

/***/ }),

/***/ "(action-browser)/./src/server/validators/anomalies.ts":
/*!********************************************!*\
  !*** ./src/server/validators/anomalies.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListAnomaliesSchema: () => (/* binding */ ListAnomaliesSchema),\n/* harmony export */   ResolveAnomalySchema: () => (/* binding */ ResolveAnomalySchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(action-browser)/./node_modules/.pnpm/zod@3.23.8/node_modules/zod/lib/index.mjs\");\n\nconst ListAnomaliesSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    start: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/).optional(),\n    end: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/).optional(),\n    level: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"critical\",\n        \"warning\"\n    ])).optional(),\n    code: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(2).optional(),\n    status: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"open\",\n        \"resolved\"\n    ]).optional(),\n    limit: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().min(1).max(200).default(50),\n    offset: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().min(0).default(0)\n});\nconst ResolveAnomalySchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1),\n    note: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(500).optional()\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL3NyYy9zZXJ2ZXIvdmFsaWRhdG9ycy9hbm9tYWxpZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdCO0FBQ2pCLE1BQU1DLHNCQUFzQkQsa0NBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUFFQyxPQUFNSCxrQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHQyxLQUFLLENBQUMsdUJBQXVCQyxRQUFRO0lBQUlDLEtBQUlQLGtDQUFDQSxDQUFDSSxNQUFNLEdBQUdDLEtBQUssQ0FBQyx1QkFBdUJDLFFBQVE7SUFBSUUsT0FBTVIsa0NBQUNBLENBQUNTLEtBQUssQ0FBQ1Qsa0NBQUNBLENBQUNVLElBQUksQ0FBQztRQUFDO1FBQVc7S0FBVSxHQUFHSixRQUFRO0lBQUlLLE1BQUtYLGtDQUFDQSxDQUFDSSxNQUFNLEdBQUdRLEdBQUcsQ0FBQyxHQUFHTixRQUFRO0lBQUlPLFFBQU9iLGtDQUFDQSxDQUFDVSxJQUFJLENBQUM7UUFBQztRQUFPO0tBQVcsRUFBRUosUUFBUTtJQUFJUSxPQUFNZCxrQ0FBQ0EsQ0FBQ2UsTUFBTSxHQUFHQyxHQUFHLEdBQUdKLEdBQUcsQ0FBQyxHQUFHSyxHQUFHLENBQUMsS0FBS0MsT0FBTyxDQUFDO0lBQUtDLFFBQU9uQixrQ0FBQ0EsQ0FBQ2UsTUFBTSxHQUFHQyxHQUFHLEdBQUdKLEdBQUcsQ0FBQyxHQUFHTSxPQUFPLENBQUM7QUFBRyxHQUFHO0FBQ3RZLE1BQU1FLHVCQUF1QnBCLGtDQUFDQSxDQUFDRSxNQUFNLENBQUM7SUFBRW1CLElBQUdyQixrQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHUSxHQUFHLENBQUM7SUFBSVUsTUFBS3RCLGtDQUFDQSxDQUFDSSxNQUFNLEdBQUdhLEdBQUcsQ0FBQyxLQUFLWCxRQUFRO0FBQUcsR0FBRyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxCQzI0MVxcTXVzaWNcXGZpbmFuY2UtYXBwLXYxLW1haW5cXGZpbmFuY2UtYXBwLXYxLW1haW5cXHNyY1xcc2VydmVyXFx2YWxpZGF0b3JzXFxhbm9tYWxpZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcbmV4cG9ydCBjb25zdCBMaXN0QW5vbWFsaWVzU2NoZW1hID0gei5vYmplY3QoeyBzdGFydDp6LnN0cmluZygpLnJlZ2V4KC9eXFxkezR9LVxcZHsyfS1cXGR7Mn0kLykub3B0aW9uYWwoKSwgZW5kOnouc3RyaW5nKCkucmVnZXgoL15cXGR7NH0tXFxkezJ9LVxcZHsyfSQvKS5vcHRpb25hbCgpLCBsZXZlbDp6LmFycmF5KHouZW51bShbXCJjcml0aWNhbFwiLFwid2FybmluZ1wiXSkpLm9wdGlvbmFsKCksIGNvZGU6ei5zdHJpbmcoKS5taW4oMikub3B0aW9uYWwoKSwgc3RhdHVzOnouZW51bShbXCJvcGVuXCIsXCJyZXNvbHZlZFwiXSkub3B0aW9uYWwoKSwgbGltaXQ6ei5udW1iZXIoKS5pbnQoKS5taW4oMSkubWF4KDIwMCkuZGVmYXVsdCg1MCksIG9mZnNldDp6Lm51bWJlcigpLmludCgpLm1pbigwKS5kZWZhdWx0KDApIH0pO1xuZXhwb3J0IGNvbnN0IFJlc29sdmVBbm9tYWx5U2NoZW1hID0gei5vYmplY3QoeyBpZDp6LnN0cmluZygpLm1pbigxKSwgbm90ZTp6LnN0cmluZygpLm1heCg1MDApLm9wdGlvbmFsKCkgfSk7XG4iXSwibmFtZXMiOlsieiIsIkxpc3RBbm9tYWxpZXNTY2hlbWEiLCJvYmplY3QiLCJzdGFydCIsInN0cmluZyIsInJlZ2V4Iiwib3B0aW9uYWwiLCJlbmQiLCJsZXZlbCIsImFycmF5IiwiZW51bSIsImNvZGUiLCJtaW4iLCJzdGF0dXMiLCJsaW1pdCIsIm51bWJlciIsImludCIsIm1heCIsImRlZmF1bHQiLCJvZmZzZXQiLCJSZXNvbHZlQW5vbWFseVNjaGVtYSIsImlkIiwibm90ZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./src/server/validators/anomalies.ts\n");

/***/ })

};
;